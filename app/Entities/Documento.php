<?php

namespace Intranet\Entities;

use Illuminate\Database\Eloquent\Model;
use Jenssegers\Date\Date;
use Intranet\Events\ActivityReport;


class Documento extends Model
{

    use BatoiModels;

    protected $table = 'documentos';
    protected $fillable = ['tipoDocumento', 'rol', 'curso', 'propietario', 'supervisor', 'descripcion'
        , 'ciclo', 'grupo', 'detalle','enlace', 'fichero', 'tags', 'activo'];
    protected $rules = [
        'tipoDocumento' => 'required',
        'descripcion' => 'required|max:200',
        'fichero' => 'sometimes|mimes:pdf,zip,odt,docx',
    ];
    protected $inputTypes = [
        'tipoDocumento' => ['type' => 'select'],
        'tags' => ['type' => 'tag', 'params' => ['class' => 'tags']],
        'fichero' => ['type' => 'file'],
        'rol' => ['type' => 'hidden'],
        'propietario' => ['disabled' => 'disabled'],
        'grupo' => ['type' => 'select'],
        'supervisor' => ['type' => 'hidden'],
        'ciclo' => ['type' => 'hidden'],
        'detalle' => ['type' => 'textarea'],
        'activo' => ['type' => 'checkbox'],
    ];
    protected $dispatchesEvents = [
        'saved' => ActivityReport::class,
        'deleted' => ActivityReport::class,
    ];
    protected $attributes = ['tipoDocumento'=>'Fichero'];

    public function getCreatedAtAttribute($entrada)
    {
        $fecha = new Date($entrada);
        return $fecha->format('d-m-Y');
    }


    public function getGrupoOptions()
    {
        return config('auxiliares.actasEnabled');
    }

    public function getTipoDocumentoOptions()
    {
        return TipoDocumento::allPestana();
    }

    public function getExistAttribute()
    {
        if (!$this->idDocumento) {
            return false;
        }
        $tD = ($this->tipoDocumento == 'Acta')?'Reunion':$this->tipoDocumento;
        $clase = 'Intranet\Entities\\'.$tD;
        return $clase::find($this->idDocumento)?true:false;
    }

    public function getSituacionAttribute()
    {
        if ($this->link) {
            if ($this->exist) {
                return 'All';
            }
            return 'Linked';
        }
        if ($this->exist) {
            return 'NoLink';
        }
        return 'Nothing';
    }
    
    public function getLinkAttribute()
    {
        return (isset($this->fichero) && file_exists(storage_path('app/' . $this->fichero)));
    }


    public function deleteDoc()
    {
        if ($this->link && !$this->exist) {
            unlink(storage_path('app/' . $this->fichero));
        }

        return parent::delete(); // TODO: Change the autogenerated stub
    }



}
